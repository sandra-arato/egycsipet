/// Shake anim

// Variables
$prefix: 'shake' !default;
$trigger: 'shake-trigger' !default;

// Placeholders
%shake {
	display: inline-block;
	transform-origin: center center;
}

%paused	 { animation-play-state: paused; }
%running	{ animation-play-state: running; }

@function apply-random($input) {
	@return if($input != 0, random($input) - $input/2, 0);
}

/// Do The Shake
@mixin do-shake(
	$name: 'shake', 
	$h: 5px, 
	$v: 5px, 
	$r: 3deg, 
	$dur: 100ms, 
	$precision: .02, 
	$opacity: false, 
	$q: infinite, 
	$t: ease-in-out, 
	$delay: null,
	$chunk: 100%
	) {	

	$rotate: 0;
	$move-x: 0;
	$move-y: 0;

	$h: if(unitless($h) and $h != 0, $h * 1px, $h);
	$v: if(unitless($v) and $v != 0, $v * 1px, $v);
	$r: if(unitless($r) and $r != 0, $r * 1deg, $r);

	// Keyframes
	@at-root {
	@keyframes #{$name} {
	$interval: if($precision > 0 and $precision < 1, 100 * $precision, 10);
	$step: $interval * 1%;

	@while $step < $chunk {
	$rotate: apply-random($r);
	$move-x: apply-random($h);
	$move-y: apply-random($v);
	
	#{$step} {
	transform: translate($move-x, $move-y) rotate($rotate);
	@if $opacity { opacity: random(100) / 100; }
	}
	
	$step: $step + $interval;
	}

	#{ if($chunk < 100%, (0%, $chunk, 100%), (0%, 100%)) } {
	transform: translate(0, 0) rotate(0);
	}

	}
	}

	@extend %shake;

	&:hover,
	.#{$trigger}:hover &,
	&.#{$prefix}-freeze,
	&.#{$prefix}-constant {
	@if $delay { animation-delay: $delay; }
	animation-name: #{$name};
	animation-duration: $dur;
	animation-timing-function: $t;
	animation-iteration-count: $q;
	}

	&:hover,
	.#{$trigger}:hover & { @extend %running; }

}

.#{$prefix}-freeze,
.#{$prefix}-constant.#{$prefix}-constant--hover:hover,
.#{$trigger}:hover .#{$prefix}-constant.#{$prefix}-constant--hover {
	@extend %paused;
}

.#{$prefix}-freeze:hover,
.#{$trigger}:hover .#{$prefix}-freeze { @extend %running; }